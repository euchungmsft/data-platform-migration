{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.255.40792",
      "templateHash": "1982548011836169881"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location to create all resources"
      }
    },
    "projectName": {
      "type": "string",
      "defaultValue": "hdmp003",
      "metadata": {
        "description": "Project name"
      }
    },
    "optHDInsightCreation": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Prompt to ask if HDInsight cluster creation needed"
      },
      "allowedValues": [
        true,
        false
      ]
    },
    "optCosmosDBCreation": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Prompt to ask if Cosmos DB creation needed"
      },
      "allowedValues": [
        true,
        false
      ]
    },
    "optSynapseCreation": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Prompt to ask if Synapse Workspace creation needed"
      },
      "allowedValues": [
        true,
        false
      ]
    },
    "optDataBrickCreation": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Prompt to ask if Azure Databrick creation needed"
      },
      "allowedValues": [
        true,
        false
      ]
    },
    "optDataFactoryCreation": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Prompt to ask if Data Factory creation needed"
      },
      "allowedValues": [
        true,
        false
      ]
    },
    "hdiClusterType": {
      "type": "string",
      "defaultValue": "hadoop",
      "metadata": {
        "description": "Type of HDI Cluster. storm is not supported in 4.0"
      },
      "allowedValues": [
        "hadoop",
        "hbase",
        "spark",
        "interactivehive",
        "kafka"
      ]
    },
    "hdiLoginUserName": {
      "type": "string",
      "defaultValue": "hdmpuser",
      "metadata": {
        "description": "Login user name of the HDI cluster"
      }
    },
    "hdiLoginPassword": {
      "type": "secureString",
      "defaultValue": "H$ngh9731@",
      "metadata": {
        "description": "Login user password of the HDI cluster"
      }
    },
    "hdiSSHUserName": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Login user name of the HDI cluster VMs"
      }
    },
    "hdiSSHPassword": {
      "type": "secureString",
      "defaultValue": "H$ngh9731@",
      "metadata": {
        "description": "Login user password of the HDI cluster VMs"
      }
    },
    "hdiVMSizeHeads": {
      "type": "string",
      "defaultValue": "Standard_E8_v3",
      "metadata": {
        "description": "VM size of head nodes of the HDI cluster"
      }
    },
    "hdiVMSizeWorker": {
      "type": "string",
      "defaultValue": "Standard_A5",
      "metadata": {
        "description": "VM size of worker nodes of the HDI cluster"
      }
    },
    "hdiVMSizeZookeeper": {
      "type": "string",
      "defaultValue": "Standard_A5",
      "metadata": {
        "description": "VM size of ZooKeeper nodes of the HDI cluster"
      }
    },
    "snpsSQLAdmUserName": {
      "type": "string",
      "defaultValue": "hdmpuser",
      "metadata": {
        "description": "Login user name of Synapse SQL"
      }
    },
    "snpsSQLAdmPassword": {
      "type": "secureString",
      "defaultValue": "H$ngh9731@",
      "metadata": {
        "description": "Login user password of Synapse SQL"
      }
    }
  },
  "functions": [],
  "variables": {
    "vLocation": "[parameters('location')]",
    "vProjectName": "[parameters('projectName')]",
    "vKeyVaultName": "[format('{0}kv001', variables('vProjectName'))]",
    "vVNetBlueName": "vnetBlue",
    "vPrivateDnsZoneName": "[format('{0}-pdns.com', variables('vProjectName'))]",
    "vUserAssignedIdentityName": "[format('{0}uain001', variables('vProjectName'))]",
    "vNSGName": "[format('{0}nsg001', variables('vProjectName'))]",
    "vSAName": "[format('{0}sa001', variables('vProjectName'))]",
    "vHDIClusterName": "[format('{0}hdi001', variables('vProjectName'))]",
    "vHDIClusterType": "[parameters('hdiClusterType')]",
    "vHDILoginUserName": "[parameters('hdiLoginUserName')]",
    "vHDILoginPassword": "[parameters('hdiLoginPassword')]",
    "vHDISSHUserName": "[parameters('hdiSSHUserName')]",
    "vHDISSHPassword": "[parameters('hdiSSHPassword')]",
    "vHDIVMSizeHeads": "[parameters('hdiVMSizeHeads')]",
    "vHDIVMSizeWorker": "[parameters('hdiVMSizeWorker')]",
    "vHDIVMSizeZookeeper": "[parameters('hdiVMSizeZookeeper')]",
    "vHDISubnetName": "subnet-hdi",
    "vHDISubnetCidr": "192.168.13.192/26",
    "vSNPSWorkspaceName": "[format('{0}snps001', variables('vProjectName'))]",
    "vSNPSSparkPoolName": "[format('{0}spp001', variables('vProjectName'))]",
    "vSNPSSQLPoolName": "[format('{0}sqp001', variables('vProjectName'))]",
    "vSNPSDataLakeStorageAccountName": "[variables('vSAName')]",
    "vSNPSDataLakeStorageFieshareName": "file01",
    "vSNPSSQLAdmUserName": "[parameters('snpsSQLAdmUserName')]",
    "vSNPSSQLAdmPassword": "[parameters('snpsSQLAdmPassword')]",
    "vCSMSAccountName": "[format('{0}csms001', variables('vProjectName'))]",
    "vADFName": "[format('{0}adf001', variables('vProjectName'))]",
    "vADBWorkspaceName": "[format('{0}adb001', variables('vProjectName'))]",
    "vADBPricingTier": "premium",
    "vADBVNetName": "[variables('vVNetBlueName')]",
    "vADBVSubnetPubName": "subnet-adb-pub",
    "vADBVSubnetPubCider": "192.168.13.64/26",
    "vADBVSubnetPvtName": "subnet-adb-prv",
    "vADBVSubnetPvtCider": "192.168.13.128/26"
  },
  "resources": [
    {
      "condition": "[parameters('optHDInsightCreation')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "create-hdinsight",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('vLocation')]"
          },
          "clusterType": {
            "value": "[variables('vHDIClusterType')]"
          },
          "clusterName": {
            "value": "[variables('vHDIClusterName')]"
          },
          "clusterLoginUserName": {
            "value": "[variables('vHDILoginUserName')]"
          },
          "clusterLoginPassword": {
            "value": "[variables('vHDILoginPassword')]"
          },
          "sshUserName": {
            "value": "[variables('vHDISSHUserName')]"
          },
          "sshPassword": {
            "value": "[variables('vHDISSHPassword')]"
          },
          "clusterStorageAccountName": {
            "value": "[variables('vSAName')]"
          },
          "userAssignedIdentityName": {
            "value": "[variables('vUserAssignedIdentityName')]"
          },
          "vmSizeHeadNode": {
            "value": "[variables('vHDIVMSizeHeads')]"
          },
          "vmSizeWorkerNode": {
            "value": "[variables('vHDIVMSizeWorker')]"
          },
          "vmSizeZookeeperNode": {
            "value": "[variables('vHDIVMSizeZookeeper')]"
          },
          "vnetHDIName": {
            "value": "[variables('vVNetBlueName')]"
          },
          "hdiSubnetName": {
            "value": "[variables('vHDISubnetName')]"
          },
          "hdiSubnetCidr": {
            "value": "[variables('vHDISubnetCidr')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.3.255.40792",
              "templateHash": "5773807477347458124"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Specifies the Azure location where the key vault should be created."
              }
            },
            "clusterType": {
              "type": "string",
              "metadata": {
                "description": "The type of the HDInsight cluster to create."
              },
              "allowedValues": [
                "hadoop",
                "hbase",
                "spark",
                "interactivehive",
                "kafka"
              ]
            },
            "clusterName": {
              "type": "string",
              "metadata": {
                "description": "The name of the HDInsight cluster to create."
              }
            },
            "clusterLoginUserName": {
              "type": "string",
              "metadata": {
                "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
              }
            },
            "clusterLoginPassword": {
              "type": "secureString",
              "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
              }
            },
            "sshUserName": {
              "type": "string",
              "metadata": {
                "description": "These credentials can be used to remotely access the cluster."
              }
            },
            "sshPassword": {
              "type": "secureString",
              "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
              }
            },
            "clusterStorageAccountName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Azure storage account to be created and be used as the cluster's primary storage."
              }
            },
            "clusterWorkerNodeCount": {
              "type": "int",
              "defaultValue": 4,
              "metadata": {
                "description": "The number of nodes in the HDInsight cluster."
              }
            },
            "clusterHeadNodeCount": {
              "type": "int",
              "defaultValue": 2,
              "metadata": {
                "description": "The number of head nodes in the HDInsight cluster."
              }
            },
            "clusterZookeeperNodeCount": {
              "type": "int",
              "defaultValue": 3,
              "metadata": {
                "description": "The number of Zookeeper nodes in the HDInsight cluster."
              }
            },
            "userAssignedIdentityName": {
              "type": "string",
              "defaultValue": "uain-001",
              "metadata": {
                "description": "The number of Zookeeper nodes in the HDInsight cluster."
              }
            },
            "vmSizeHeadNode": {
              "type": "string",
              "defaultValue": "Standard_D3",
              "metadata": {
                "description": "VM Spec for Head Node"
              }
            },
            "vmSizeWorkerNode": {
              "type": "string",
              "defaultValue": "Standard_D3",
              "metadata": {
                "description": "VM Spec for Worker Node"
              }
            },
            "vmSizeZookeeperNode": {
              "type": "string",
              "defaultValue": "Standard_D3",
              "metadata": {
                "description": "VM Spec for ZooKeeper Node"
              }
            },
            "vnetHDIName": {
              "type": "string",
              "defaultValue": "vnetBlue",
              "metadata": {
                "description": "VNet name where HDI is deployed"
              }
            },
            "hdiSubnetName": {
              "type": "string",
              "defaultValue": "subnet-hdi",
              "metadata": {
                "description": "Subnet name where HDI is deployed"
              }
            },
            "hdiSubnetCidr": {
              "type": "string",
              "defaultValue": "192.168.13.192/26",
              "metadata": {
                "description": "Subnet Cidr where HDI is deployed"
              }
            }
          },
          "functions": [],
          "variables": {
            "vnetHDIId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetHDIName'))]",
            "managedIdentityId": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{2}', subscription().subscriptionId, resourceGroup().name, parameters('userAssignedIdentityName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2020-05-01",
              "name": "[format('{0}/{1}', parameters('vnetHDIName'), parameters('hdiSubnetName'))]",
              "properties": {
                "addressPrefix": "[parameters('hdiSubnetCidr')]"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2019-06-01",
              "name": "[parameters('clusterStorageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "encryption": {
                  "keySource": "Microsoft.Storage",
                  "services": {
                    "blob": {
                      "enabled": true
                    },
                    "file": {
                      "enabled": true
                    }
                  }
                },
                "accessTier": "Hot",
                "isHnsEnabled": true,
                "supportsHttpsTrafficOnly": true
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/default/blob01', parameters('clusterStorageAccountName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('clusterStorageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/default/file01', parameters('clusterStorageAccountName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('clusterStorageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[parameters('userAssignedIdentityName')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.HDInsight/clusters",
              "apiVersion": "2018-06-01-preview",
              "name": "[parameters('clusterName')]",
              "location": "[parameters('location')]",
              "properties": {
                "clusterVersion": "4.0",
                "osType": "Linux",
                "tier": "Standard",
                "clusterDefinition": {
                  "kind": "[parameters('clusterType')]",
                  "configurations": {
                    "gateway": {
                      "restAuthCredential.isEnabled": true,
                      "restAuthCredential.username": "[parameters('clusterLoginUserName')]",
                      "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
                    }
                  }
                },
                "storageProfile": {
                  "storageaccounts": [
                    {
                      "name": "[format('{0}.dfs.core.windows.net', parameters('clusterStorageAccountName'))]",
                      "isDefault": true,
                      "fileSystem": "file01",
                      "key": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('clusterStorageAccountName')), '2019-06-01').keys[0].value]",
                      "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('clusterStorageAccountName'))]",
                      "msiResourceId": "[variables('managedIdentityId')]"
                    }
                  ]
                },
                "computeProfile": {
                  "roles": [
                    {
                      "name": "headnode",
                      "targetInstanceCount": "[parameters('clusterHeadNodeCount')]",
                      "hardwareProfile": {
                        "vmSize": "[parameters('vmSizeHeadNode')]"
                      },
                      "osProfile": {
                        "linuxOperatingSystemProfile": {
                          "username": "[parameters('sshUserName')]",
                          "password": "[parameters('sshPassword')]"
                        }
                      },
                      "virtualNetworkProfile": {
                        "id": "[variables('vnetHDIId')]",
                        "subnet": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', parameters('vnetHDIName'), parameters('hdiSubnetName')), '/')[0], split(format('{0}/{1}', parameters('vnetHDIName'), parameters('hdiSubnetName')), '/')[1])]"
                      }
                    },
                    {
                      "name": "workernode",
                      "targetInstanceCount": "[parameters('clusterWorkerNodeCount')]",
                      "hardwareProfile": {
                        "vmSize": "[parameters('vmSizeWorkerNode')]"
                      },
                      "osProfile": {
                        "linuxOperatingSystemProfile": {
                          "username": "[parameters('sshUserName')]",
                          "password": "[parameters('sshPassword')]"
                        }
                      },
                      "virtualNetworkProfile": {
                        "id": "[variables('vnetHDIId')]",
                        "subnet": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', parameters('vnetHDIName'), parameters('hdiSubnetName')), '/')[0], split(format('{0}/{1}', parameters('vnetHDIName'), parameters('hdiSubnetName')), '/')[1])]"
                      }
                    },
                    {
                      "name": "zookeepernode",
                      "targetInstanceCount": "[parameters('clusterZookeeperNodeCount')]",
                      "hardwareProfile": {
                        "vmSize": "[parameters('vmSizeZookeeperNode')]"
                      },
                      "osProfile": {
                        "linuxOperatingSystemProfile": {
                          "username": "[parameters('sshUserName')]",
                          "password": "[parameters('sshPassword')]"
                        }
                      },
                      "virtualNetworkProfile": {
                        "id": "[variables('vnetHDIId')]",
                        "subnet": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', parameters('vnetHDIName'), parameters('hdiSubnetName')), '/')[0], split(format('{0}/{1}', parameters('vnetHDIName'), parameters('hdiSubnetName')), '/')[1])]"
                      }
                    }
                  ]
                }
              },
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[variables('managedIdentityId')]": {}
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('clusterStorageAccountName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', parameters('vnetHDIName'), parameters('hdiSubnetName')), '/')[0], split(format('{0}/{1}', parameters('vnetHDIName'), parameters('hdiSubnetName')), '/')[1])]"
              ]
            }
          ]
        }
      }
    }
  ]
}